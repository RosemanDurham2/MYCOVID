#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun May  9 21:07:25 2021

@author: meg
"""


import warnings
import numpy as np
import pandas as pd
import scipy.optimize as st
import scipy.stats as sts
import statsmodels as sm
import matplotlib
import matplotlib.pyplot as plt

def my_res( params, yData ):
    a, b = params
    xList= range( 1, len(yData) + 1 )
    th = np.fromiter( ( sts.gamma.pdf( x, a, loc=0, scale=b ) for x in  xList ), np.float )
    diff = th - np.array( yData )
    return diff


days=np.linspace(0,75,75)
print(days)
x=np.full((75,),1)
y=np.full((39,),1)
print(len(x))
print(x)
symp=np.array([0.0,0.0,0.04,0.05,0.056,0.07,0.064,0.068,0.05,0.05,0.063,0.058,0.044,0.043,0.0365,0.025,0.03,0.031,0.026,0.024,0.016,0.014,0.02,0.014,0.017,0.017,0.012,0.014,0.008,0.011,0.013,0.01,0.008,0.005,0.008,0.01,0.006,0.007,0.005,0.01])
symp2=[0.0,0.0,0.05,0.056,0.07,0.064,0.068,0.05,0.05,0.063,0.058,0.044,0.043,0.0365,0.025,0.03,0.031,0.026,0.024,0.016,0.014,0.02,0.014,0.017,0.017,0.012,0.014,0.008,0.011,0.013,0.01,0.008,0.005,0.008,0.01,0.006,0.007,0.005,0.01,0]
lies=[0.0,0,0,0.05,0.05,0.056,0.056,0.1,0.07,0.064,0.064,0.068,0.068,0.05,0.05,0.05,0.05,0.063,0.063,0.058,0.058,0.044,0.044,0.043,0.043,0.0365,0.0365,0.025,0.025,0.03,0.03,0.031,0.031,0.026,0.026,0.024,0.024,0.016,0.016,0.014,0.014,0.02,0.02,0.014,0.014,0.017,0.017,0.017,0.017,0.012,0.012,0.014,0.014,0.008,0.008,0.011,0.011,0.013,0.013,0.01,0.01,0.008,0.008,0.05,0.05,0.08,0.08,0.01,0.01,0.006,0.006,0.05,0.005,0.01,0.01]
lies2=[0.0,0,0,0.05,0.05,0.056,0.056,0.07,0.07,0.064,0.064,0.068,0.068,0.05,0.05,0.05,0.05,0.063,0.063,0.058,0.058,0.044,0.044,0.043,0.043,0.0365,0.0365,0.025,0.025,0.03,0.03,0.031,0.031,0.026,0.026,0.024,0.024,0.016,0.016,0.014,0.014,0.02,0.02,0.014,0.014,0.017,0.017,0.017,0.017,0.012,0.012,0.014,0.014,0.008,0.008,0.011,0.011,0.013,0.013,0.01,0.01,0.008,0.008,0.005,0.005,0.008,0.008,0.01,0.01,0.006,0.006,0.005,0.005,0.01,0.01]
symp3=np.roll(symp2,1)
trusymp=(symp2+symp3)/2
print(len(symp2))
trusymp[0]=0

data = np.array(lies2)*0.5
data2 = np.array(lies)*0.5
sol, err = st.leastsq( my_res, [10, 1 ], args=( data2, ) )
print('...and the right way:')
print(sol)
print(err,"ERROR")
datath = [ sts.gamma.pdf( x, sol[0], loc=0, scale=sol[1]) for x in range(1,72) ]
ll=days
plop=sts.gamma.pdf(ll, sol[0], loc=0, scale=sol[1])
print('expected values:')
print(plop)

fig, ax = plt.subplots()
fig.set_size_inches(18.5/2, 10.5/2)

ax.plot(plop)
ax.plot(data)
plt.grid()
plt.show()

fig, ax = plt.subplots()
fig.set_size_inches(18.5/2, 10.5/1.8)
ax.hist(days,bins=days,weights=x*lies2,alpha=0.4)
plt.xlabel("Duration of symptoms in days")
plt.ylabel("Normalised freq.")
plt.grid()
plt.xticks(np.linspace(0,75,9),labels=[0,5,10,15,20,25,30,35,40])

plt.xlim(0,73)
plt.plot(plop*2)
plt.legend(labels=["Gamma distribution fit"])

plt.show()



